<?php

/**
 * @file
 * Contains az_user.module.
 */

use Drupal\Component\Utility\Random;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_theme().
 */
/*
function az_user_theme($existing, $type, $theme, $path) {
  return;
  return [
    'form__user_login_form' => [
      'render element' => 'form',
      'template' => 'form--user-login-form',
    ],
  ];
}
*/

/**
 * Implements hook_form_FORM_ID_alter().   user_form
 */
function az_user_form_user_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (!\Drupal::currentUser()->hasPermission('administer account settings')) {
    $form['field_address']['#access'] = false;
    $form['field_phone']['#access'] = false;
    $form['field_private_notes']['#access'] = false;
  }
  return;
}

/**
 * Implements hook_form_FORM_ID_alter().   user_login
 */
function az_user_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  $form['login-form'] = [
    '#type' => 'container',
    '#weight' => 0,
    '#attributes' => ['class' => ['login-form']],
    'name' => $form['name'],
    'pass' => $form['pass'],
    'header' => [
      '#type' => 'container',
      '#attributes' => ['class' => ['header']],
      '#weight' => -1,
      'markup' => ['#markup' => '<h2>Login to Ethereal Matters</h2>'],
    ],
    'forgot_password' => [
      '#type' => 'container',
      '#attributes' => ['class' => ['forgot-password']],
      '#weight' => 101,
      'markup' => ['#markup' => 'Forgot your password? - <a href="/user/register">Click here</a>'],
    ],
    'actions' => $form['actions'],
  ];
  unset($form['name']);
  unset($form['pass']);
  unset($form['actions']);

  // Add the join block that goes below the login form.   nid 321
  $build = \Drupal::entityTypeManager()->getViewBuilder('node')->view(Node::load(321), 'full');
  $form['join_block'] = [
    '#type' => 'container',
    '#attributes' => ['class' => ['join-block']],
    '#weight' => 100,
    'markup' => ['#markup' => render($build)],
  ];

  return;
}

/**
 * Implements HOOK_preprocess_user().
 *
 */
function az_user_preprocess_user(&$variables) {
  $user = $variables['user'];

  // Create the fullname by concatenating the first and last names.
  if (!empty($variables['content']['field_first_name'])) {
    $variables['fullname'] = $variables['content']['field_first_name']['0']['#context']['value'] . ' ';
  }
  if (!empty($variables['content']['field_last_name'])) {
    $variables['fullname'] .= $variables['content']['field_last_name']['0']['#context']['value'];
  }

  // Get the URL of the user
  $variables['url'] = $variables['user']->url();

  // Create Users Recent Activity tab
  $activity = _az_content_build_content_block([
    'id' => 'recent-activity',
    'tab' => 'Activity',
    'title' => 'Recent Activity',
    'author' => $user->id(),
    'status' => NODE_PUBLISHED,
    'empty' => 'No activity for this user',
  ]);

  // Create Users Unpublished tab
  $unpublished = _az_content_build_content_block([
    'id' => 'unpublished-activity',
    'tab' => 'Unpublished',
    'title' => 'Recent Unpublished Activity',
    'author' => $user->id(),
    'status' => NODE_NOT_PUBLISHED,
    'empty' => 'No unpublished activity for this user',
  ]);

  // Create Users Tickets tab
  $tickets = _az_content_build_content_block([
    'id' => 'tickets',
    'tab' => 'Tickets',
    'author' => $user->id(),
    'title' => 'Tickets',
    'types' => 'ticket',
    'status' => NODE_PUBLISHED,
    'empty' => 'No tickets have been posted by this user.',
  ]);

  // Create Users Comments tab
  $comments = _az_content_build_content_block([
    'entity_type' => 'comment',
    'id' => 'comments',
    'tab' => 'Comments',
    'author_comments' => $user->id(),
    'title' => 'Recent Comments',
    'status' => NODE_PUBLISHED,
    'empty' => 'No comments for this user',
  ]);

  $variables['tabs'] = [
    'activity'    => (isset($activity))    ? $activity    : null,
    'unpublished' => (isset($unpublished)) ? $unpublished : null,
    'tickets'     => (isset($tickets))     ? $tickets     : null,
    'comments'    => (isset($comments))    ? $comments    : null,
  ];
}

function az_user_preprocess_menu(&$variables) {
  if ($variables['menu_name'] == 'account' && $variables['logged_in']) {
    $user = \Drupal::entityTypeManager()
      ->getStorage('user')
      ->load(\Drupal::currentUser()->id());
    if ($user) {
      if ($user->field_picture->isEmpty()) {
        $variables['user_name'] = $user->name;
      }
      else {
        $picture = $user->field_picture->getValue();
        $file = \Drupal\file\Entity\File::load($picture[0]['target_id']);
        $variables['user_picture_url'] = \Drupal\image\Entity\ImageStyle::load('thumbnail')->buildUrl($file->getFileUri());
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter
 *
 * Suggest user--{view_mode}.html.twig file.
 */
function az_user_theme_suggestions_user_alter(array &$suggestions, array $variables, $hook) {
  $suggestions[] = $variables['theme_hook_original'] . '__' . str_replace('-', '_', $variables['elements']['#view_mode']);
  return $suggestions;
}
