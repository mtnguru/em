{#
/**
* @file
* Default theme implementation to display a node.
*
* Available variables:
* - title: the (sanitized) title of the node.
* - content: An array of node items. Use render(content) to print them all, or
*   print a subset such as render(content['field_example']). Use
*   hide(content['field_example']) to temporarily suppress the printing of a
*   given element.
* - user_picture: The node author's picture from user-picture.tpl.php.
* - date: Formatted creation date. Preprocess functions can reformat it by
*   calling format_date() with the desired parameters on the created variable.
* - name: Themed username of node author output from theme_username().
* - node_url: Direct url of the current node.
* - terms: the themed list of taxonomy term links output from theme_links().
* - display_submitted: whether submission information should be displayed.
* - classes: String of classes that can be used to style contextually through
*   CSS. It can be manipulated through the variable classes_array from
*   preprocess functions. The default values can be one or more of the following:
*   - node: The current template type, i.e., "theming hook".
*   - node-[type]: The current node type. For example, if the node is a
*     "Blog entry" it would result in "node-blog". Note that the machine
*     name will often be in a short form of the human readable label.
*   - node-teaser: Nodes in teaser form.
*   - node-preview: Nodes in preview mode.
*   The following are controlled through the node publishing options.
*   - node-promoted: Nodes promoted to the front page.
*   - node-sticky: Nodes ordered above other non-sticky nodes in teaser listings.
*   - node-unpublished: Unpublished nodes visible only to administrators.
* - title_prefix (array): An array containing additional output populated by
*   modules, intended to be displayed in front of the main title tag that
*   appears in the template.
* - title_suffix (array): An array containing additional output populated by
*   modules, intended to be displayed after the main title tag that appears in
*   the template.
*
* Other variables:
* - node: Full node object. Contains data that may not be safe.
* - type: Node type, i.e. story, page, blog, etc.
* - comment_count: Number of comments attached to the node.
* - uid: User ID of the node author.
* - created: Time the node was published formatted in Unix timestamp.
* - classes_array: Array of html class attribute values. It is flattened
*   into a string within the variable classes.
* - zebra: Outputs either "even" or "odd". Useful for zebra striping in
*   teaser listings.
* - id: Position of the node. Increments each time it's output.
*
* Node status variables:
* - view_mode: View mode, e.g. 'full', 'teaser'...
* - teaser: Flag for the teaser state (shortcut for view_mode == 'teaser').
* - page: Flag for the full page state.
* - promote: Flag for front page promotion state.
* - sticky: Flags for sticky post setting.
* - status: Flag for published status.
* - comment: State of comment settings for the node.
* - readmore: Flags true if the teaser content of the node cannot hold the
*   main body content.
* - is_front: Flags true when presented in the front page.
* - logged_in: Flags true when the current user is a logged-in member.
* - is_admin: Flags true when the current user is an administrator.
*
* Field variables: for each field instance attached to the node a corresponding
* variable is defined, e.g. node->body becomes body. When needing to access
* a field's raw values, developers/themers are strongly encouraged to use these
* variables. Otherwise they will have to explicitly specify the desired field
* language, e.g. node->body['en'], thus overriding any language negotiation
* rule that was previously applied.
*
* @see template_preprocess()
* @see template_preprocess_node()
* @see template_process()
*/
#}

{% if node.bundle == 'article' %}
  {% set fa_icon = 'fa-file-alt' %}
{% elseif node.bundle == 'news' %}
  {% set fa_icon = 'fa-newspaper' %}
{% elseif node.bundle == 'book' %}
  {% set fa_icon = 'fa-book' %}
{% elseif node.bundle == 'glossary' %}
  {% set fa_icon = 'fa-puzzle-piece' %}
{% elseif node.bundle == 'molecule' %}
  {% set fa_icon = 'fa-project-diagram' %}
{% elseif node.bundle == 'event' %}
  {% set fa_icon = 'fa-calendar-alt' %}
{% else %}
  {% set fa_icon = 'fa-bomb' %}
{% endif %}

<article id="node-{{ node.id }}" class="{{ attributes.class }} {{ display_mode }} {{ view_mode }} az-page {{ 'type-' ~ node.bundle }}"{{ attributes }}>

  <div class='sidebar sidebar-left'>
    {% for block in sidebar  %}
      {{ block }}
    {% endfor %}
  </div>

  <div class="main-container">
    <div class="header-container">
      <div class="header">
        <div class="block-right">
          {% if content.field_social_media is not empty %}
            {{ content.field_social_media }}
          {% endif %}

          {# if content.field_topics is not empty %}
            <div class="topics">
              {{ content.field_topics }}
            </div>
          {% endif #}

        </div>

        <h2 class="title">{{ title }}</h2>

        <div class="information">
          {% if state != 'published' %}
            <span class="state {{ state|replace('_', '-') }}">{{ state|capitalize|replace('_', ' ') }}</span> -
          {% endif %}
          <i class="fas {{ fa_icon }}"></i>
          <span>
            {{ bundle_name }} -
          </span>

          <span class="changed" title="{{ changed }}">{{ changed_ago }} ago</span>

          {% if has_new_content %}
            <span class="new">{{ has_new_content }}</span>
          {% endif %}
        </div>
      </div>

      {% if show_author and author_picture %}
        {{ author_picture }}
      {% endif %}
    </div>

    <div class="body-container">

      <div class="body-header">
        {# CT - event #}
        {% if content.field_event_date is not empty %}
          <div class="field-event-date">
            {{ content.field_event_date }}
          </div>
        {% endif %}

        {% if content.field_website_link is not empty %}
          <div class="field-website-link">
            {{ content.field_website_link }}
          </div>
        {% endif %}

        {% if content.field_location is not empty %}
          <div class="field-location">
            {{ content.field_location }}
          </div>
        {% endif %}

        {# CT - glossary #}
        {% if content.field_tooltip is not empty %}
          <div class="field-tooltip">
            {{ content.field_tooltip }}
          </div>
        {% endif %}

        {# CT - glossary #}
        {% if content.field_links is not empty %}
          <div class="field-links">
            {{ content.field_links }}
          </div>
        {% endif %}

        {# CT - news #}
        {% if content.field_publication is not empty %}
          <div class="publication">
            {{ content.field_publication }}
          </div>
        {% endif %}

        {# CT - news #}
        {% if content.field_article_link is not empty %}
          <div class="article-link">
            {{ content.field_article_link }}
          </div>
        {% endif %}
      </div>

      {% if content.field_media is not empty %}
        <div class="media">
          {{ content.field_media }}
        </div>
      {% endif %}

      {% if content.field_formula is not empty %}
        <div class="formula">
          {{ content.field_formula }}
        </div>
      {% endif %}

      {% if content.field_common_name is not empty %}
        <div class="common-name">
          {{ content.field_common_name }}
        </div>
      {% endif %}

      {% if content.body is not empty %}
        <div class="body">
          {{ content.body }}
        </div>
      {% endif %}

      {% if content.field_structure is not empty %}
        <div class="structure">
          {{ content.field_structure }}
        </div>
      {% endif %}

      {% if content.field_molecule_structure is not empty %}
        <pre class="molecule-structure">
          <code>
            {{ node.field_molecule_structure.value | trim }}
          </code>
        </pre>
      {% endif %}
    </div>

    {% if content.book_navigation is not empty %}
      {{ content.book_navigation }}
    {% endif %}

    {{ content.links }}
    {{ content.field_comments }}
  </div>
</article>

